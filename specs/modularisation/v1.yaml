openapi: "3.0.0"
info:
  version: 1.0.0
  title: Modularisation v1 APIs
paths:
  /orchestrator/module:
    get:
      description: Get All active modules
      responses:
        "200":
          description: Successfully fetched modules
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Module"
    post:
      description: some action on module (for eg - install/upgrade/etc..)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ModuleActionRequest"
      responses:
        "200":
          description: module action response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponse"
  /orchestrator/server:
    get:
      description: Get server info
      responses:
        "200":
          description: Successfully fetched current server info
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ServerInfo"
    post:
      description: some action on server (for eg - install/upgrade/etc..)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ServerActionRequest"
      responses:
        "200":
          description: server action response
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ActionResponse"

# Components
components:
  schemas:
    Module:
      type: object
      properties:
        id:
          type: integer
          description: Id of module
          example: 1
        name:
          type: string
          description: module name
          example: "ciCd"
        status:
          type: string
          description: status of the module
          example: "notInstalled|installed|installing|installFailed"
    ModuleActionRequest:
      type: object
      properties:
        id:
          type: integer
          description: Id of module
          example: 1
        action:
          type: string
          description: action on the module
          example: "install/upgrade"
    ServerInfo:
      type: object
      properties:
        currentVersion:
          type: integer
          description: current version of the devtron server
          example: 1
        status:
          type: string
          description: status of the server
          example: "available|installing|installFailed"
        releaseName:
          type: string
          description: helm release name of the devtron server
          example: "devtron"
        logPodName:
          type: string
          description: pod name of inception for logs
          example: "inception-1"
    ServerActionRequest:
      type: object
      properties:
        action:
          type: string
          description: action on the server
          example: "upgrade"
        version:
          type: string
          description: version to which server is to be upgradred
          example: "v1.2.3"
    ActionResponse:
      type: object
      properties:
        success:
          type: boolean
          description: success or failure
          example: true
